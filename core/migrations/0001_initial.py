# Generated by Django 5.1.7 on 2025-03-24 08:57

import ckeditor.fields
import core.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Current Account', 'Current Account'), ('Saving Account', 'Saving Account'), ('Digital Accounts', 'Digital Accounts'), ('Fixed Deposit Account', 'Fixed Deposit Account'), ('Islamic Current Account', 'Islamic Current Account'), ('Islamic Saving Account', 'Islamic Saving Account'), ('Islamic Term Deposits', 'Islamic Term Deposits'), ('Islamic Installment Based Term Deposits', 'Islamic Installment Based Term Deposits')], max_length=40)),
                ('image', models.ImageField(blank=True, null=True, upload_to='account_tabs_images/')),
            ],
            options={
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='AccountFeaturesPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Account Features Promos',
            },
        ),
        migrations.CreateModel(
            name='AccountPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_heading', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('features_heading', models.CharField(max_length=255)),
                ('features', models.TextField(help_text='Enter each feature on a new line.')),
                ('image', models.ImageField(upload_to='account-promo-img/')),
                ('cta_text', models.CharField(help_text='Text for the call-to-action button.', max_length=255)),
                ('cta_url', models.CharField(help_text='URL for the call-to-action button.', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Account Promos',
            },
        ),
        migrations.CreateModel(
            name='ArticleSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_title', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('description_before', ckeditor.fields.RichTextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/')),
                ('description_after', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Article Sections',
            },
        ),
        migrations.CreateModel(
            name='AssociatedCompaniesPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_title', models.CharField(help_text='Title of the promo section', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Associated Companies Promos',
            },
        ),
        migrations.CreateModel(
            name='BankingPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_type', models.CharField(choices=[('premier', 'Premier'), ('islamic', 'Islamic'), ('corporate', 'Corporate')], default='Corporate', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('cta_text', models.CharField(max_length=50)),
                ('cta_link', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='banking-promo-images/')),
            ],
            options={
                'verbose_name_plural': 'Banking Promos',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=50, null=True)),
                ('cta_link', models.CharField(blank=True, max_length=200, null=True)),
                ('cta_text_2', models.CharField(blank=True, max_length=50, null=True)),
                ('cta_link_2', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='account_card_images/')),
            ],
            options={
                'verbose_name_plural': 'Cards',
            },
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_description', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name_plural': 'Company Details',
            },
        ),
        migrations.CreateModel(
            name='ComplaintFormData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.CharField(max_length=255)),
                ('customer_contact_no', models.CharField(max_length=255)),
                ('customer_contact_no_landline', models.CharField(max_length=255)),
                ('customer_contact_acc_no', models.CharField(max_length=255)),
                ('customer_city', models.CharField(max_length=255)),
                ('product_detail', models.CharField(max_length=255)),
                ('complaint_detail', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Complaint Form Data',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, upload_to='logos/')),
                ('cta_link', models.CharField(max_length=255)),
                ('cta_text', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Contact Info',
            },
        ),
        migrations.CreateModel(
            name='EligibilityDocsSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name_plural': 'Eligibility Docs Sections',
            },
        ),
        migrations.CreateModel(
            name='EmploymentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', core.models.EncryptedField()),
                ('email', core.models.EncryptedField()),
                ('mobile_number', core.models.EncryptedField()),
                ('cnic', core.models.EncryptedField()),
                ('date_of_birth', core.models.EncryptedField()),
                ('emergency_number', core.models.EncryptedField()),
                ('address', core.models.EncryptedField()),
                ('city', core.models.EncryptedField()),
                ('qualification', core.models.EncryptedField()),
                ('institution', core.models.EncryptedField()),
                ('additional_certification', core.models.EncryptedField(blank=True, null=True)),
                ('education_start_date', core.models.EncryptedField()),
                ('education_end_date', core.models.EncryptedField(blank=True, null=True)),
                ('education_in_process', models.BooleanField(default=False)),
                ('industry_type', core.models.EncryptedField(blank=True, null=True)),
                ('designation', core.models.EncryptedField(blank=True, null=True)),
                ('organization', core.models.EncryptedField(blank=True, null=True)),
                ('job_tenure_from', core.models.EncryptedField(blank=True, null=True)),
                ('job_tenure_to', core.models.EncryptedField(blank=True, null=True)),
                ('job_tenure_in_process', models.BooleanField(default=False)),
                ('additional_education', models.JSONField(blank=True, null=True)),
                ('additional_experience', models.JSONField(blank=True, null=True)),
                ('cv_file', models.FileField(upload_to='employment_applications/cv/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Employment Application',
                'verbose_name_plural': 'Employment Applications',
            },
        ),
        migrations.CreateModel(
            name='FAQSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'FAQ Sections',
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the file', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description of the file', null=True)),
                ('file', models.FileField(help_text='The uploaded file', upload_to='uploads/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'File Upload',
                'verbose_name_plural': 'File Uploads',
            },
        ),
        migrations.CreateModel(
            name='FinancialReportsCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('header', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date', models.CharField(blank=True, max_length=255, null=True)),
                ('cta_link', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='finanical_reports_ceo_images/')),
            ],
            options={
                'verbose_name_plural': 'Financial Reports Cards',
            },
        ),
        migrations.CreateModel(
            name='FinancialSolutionPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_heading', models.CharField(blank=True, max_length=255)),
                ('card_title', models.CharField(blank=True, max_length=255)),
                ('card_header', models.CharField(max_length=255)),
                ('card_description', models.TextField()),
                ('card_image', models.ImageField(upload_to='financial-solution-promo-images/')),
                ('cta_text', models.CharField(max_length=100)),
                ('cta_link', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Financial Solution Promos',
            },
        ),
        migrations.CreateModel(
            name='FooterSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_logo', models.ImageField(upload_to='footer-logos/')),
            ],
            options={
                'verbose_name_plural': 'Footer Sections',
            },
        ),
        migrations.CreateModel(
            name='FraudulentFundTransferComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('cnic_no', models.CharField(max_length=255)),
                ('transaction_date', models.CharField(max_length=255)),
                ('transaction_amount', models.CharField(max_length=255)),
                ('account_amount', models.CharField(max_length=255)),
                ('contact_no', models.CharField(max_length=255)),
                ('customer_remarks', models.CharField(max_length=255)),
                ('other_information', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Fraudulent Fund Transfer Complaints',
            },
        ),
        migrations.CreateModel(
            name='GrievancePromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('name', models.CharField(max_length=255)),
                ('designation', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Grievance Promos',
            },
        ),
        migrations.CreateModel(
            name='HeroSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='hero-images/')),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=50, null=True)),
                ('cta_link', models.CharField(blank=True, max_length=150, null=True)),
                ('show_app_buttons', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Hero Sections',
            },
        ),
        migrations.CreateModel(
            name='HeroSliderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='hero-slider-images/')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=50, null=True)),
                ('cta_link', models.CharField(blank=True, max_length=150, null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the slide')),
            ],
            options={
                'verbose_name_plural': 'Hero Slider Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HRMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hrpicture', models.ImageField(upload_to='hr_pictures/')),
                ('hrmessage', models.TextField()),
                ('hrname', models.CharField(max_length=255)),
                ('hrdesignation', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'HR Messages',
            },
        ),
        migrations.CreateModel(
            name='InvestorsPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/')),
                ('cta_link', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Investors Promos',
            },
        ),
        migrations.CreateModel(
            name='JobsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name_plural': 'Jobs Pages',
            },
        ),
        migrations.CreateModel(
            name='LegalAdvisorsPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('name_auditor', models.CharField(max_length=255)),
                ('organization_auditor', models.CharField(max_length=255)),
                ('name_legal_advisor', models.CharField(max_length=255)),
                ('organization_legal_advisor', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Legal Advisors Promos',
            },
        ),
        migrations.CreateModel(
            name='MediaCards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=50, null=True)),
                ('cta_link', models.CharField(blank=True, max_length=200, null=True)),
                ('tab_image', models.ImageField(blank=True, null=True, upload_to='media_tab_image/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='account_card_images/')),
                ('tab', models.CharField(choices=[('Glossary', 'Glossary'), ('All Banknotes', 'All Banknotes'), ('Press Releases', 'Press Releases'), ('Media Contacts', 'Media Contacts'), ('Images', 'Images')], max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Media Cards',
            },
        ),
        migrations.CreateModel(
            name='ModalPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('person_name', models.CharField(max_length=255)),
                ('cta_text', models.CharField(max_length=100)),
                ('cta_link', models.CharField(max_length=100)),
                ('image_1', models.ImageField(upload_to='modal_promo_images/')),
                ('image_2', models.ImageField(upload_to='modal_promo_images/')),
            ],
            options={
                'verbose_name_plural': 'Modal Promos',
            },
        ),
        migrations.CreateModel(
            name='NavbarMainItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Main navigation item', max_length=255)),
                ('nav_type', models.CharField(choices=[('Conventional', 'Conventional'), ('Islamic', 'Islamic'), ('Premier', 'Premier')], default='Conventional', max_length=255)),
                ('nav_bg', models.ImageField(blank=True, help_text='Background image for the main item', null=True, upload_to='navbar-bg/')),
                ('url_text', models.CharField(blank=True, null=True)),
                ('url', models.CharField(blank=True, help_text='Optional URL for the main item', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the main item')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to display this item')),
            ],
            options={
                'verbose_name_plural': 'Navbar Main Items',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='NewsUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='news-update-imgs/')),
                ('headline', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('cta_text', models.CharField(max_length=100)),
                ('cta_link', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'News Updates',
            },
        ),
        migrations.CreateModel(
            name='OfferImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='offers-promo-images/')),
            ],
            options={
                'verbose_name_plural': 'Offer Images',
            },
        ),
        migrations.CreateModel(
            name='PromoBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_text', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='promo-banner-images/')),
                ('cta1_link', models.CharField(max_length=255)),
                ('cta1_image', models.ImageField(upload_to='cta-images/')),
                ('cta2_link', models.CharField(max_length=255)),
                ('cta2_image', models.ImageField(upload_to='cta-images/')),
            ],
            options={
                'verbose_name_plural': 'Promo Banners',
            },
        ),
        migrations.CreateModel(
            name='PromoBannerFull',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_text', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('cta_link', models.CharField(max_length=255)),
                ('cta_text', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='promo_banner_full_img/')),
            ],
            options={
                'verbose_name_plural': 'Promo Banners Full',
            },
        ),
        migrations.CreateModel(
            name='RedBoxPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Red Box Promos',
            },
        ),
        migrations.CreateModel(
            name='TablePromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('table', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name_plural': 'Table Promos',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='team_images/')),
                ('category', models.CharField(choices=[('board_of_directors', 'Board of Directors'), ('management_team', 'Management Team')], max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.CreateModel(
            name='VisionMissionPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_title', models.CharField(help_text='Title of the promo section', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Vision Mission Promos',
            },
        ),
        migrations.CreateModel(
            name='AccountFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', ckeditor.fields.RichTextField(max_length=200)),
                ('description', ckeditor.fields.RichTextField(help_text="Format as an unstyled list with check circle outlines by using the classes: 'list-unstyled list-check-circle-outline mt-4' on a ul element.")),
                ('image', models.ImageField(upload_to='account_features_promo_images/')),
                ('image_orientation', models.CharField(choices=[('left', 'Left'), ('right', 'Right')], max_length=10)),
                ('promo_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='core.accountfeaturespromo')),
            ],
            options={
                'verbose_name_plural': 'Account Features',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AccountSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('account_types', models.ManyToManyField(related_name='accounts', to='core.account')),
            ],
            options={
                'verbose_name_plural': 'Account Sections',
            },
        ),
        migrations.CreateModel(
            name='AssociatedCompaniesPromoEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='associated_comp_logos/')),
                ('title', models.CharField(max_length=255)),
                ('header', models.CharField(max_length=255)),
                ('status_description', models.CharField(max_length=255)),
                ('cta_text', models.CharField(max_length=255)),
                ('cta_link', models.CharField(max_length=255)),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries_comp', to='core.associatedcompaniespromo')),
            ],
            options={
                'verbose_name_plural': 'Associated Companies Promo Entries',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='cards',
            field=models.ManyToManyField(default='Current Account', related_name='account_types', to='core.card'),
        ),
        migrations.CreateModel(
            name='EligibilityDocTile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tile_title', models.CharField(max_length=255)),
                ('tile_image', models.ImageField(blank=True, null=True, upload_to='eligibility_doc_tiles/')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiles', to='core.eligibilitydocssection')),
            ],
            options={
                'verbose_name_plural': 'Eligibility Doc Tiles',
            },
        ),
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', ckeditor.fields.RichTextField()),
                ('faq_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_items', to='core.faqsection')),
            ],
            options={
                'verbose_name_plural': 'FAQ Items',
            },
        ),
        migrations.CreateModel(
            name='FinancialReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Annual Reports', 'Annual Reports'), ('Analyst Briefing', 'Analyst Briefing'), ('Capital Adequacy Ratio', 'Capital Adequacy Ratio'), ('CEO Review', 'CEO Review'), ('Best Corporate Report', 'Best Corporate Report'), ('Credit Rating', 'Credit Rating'), ('Material Information', 'Material Information'), ('Unclaimed Deposits', 'Unclaimed Deposits'), ('Other', 'Other')], max_length=40)),
                ('cards_reports', models.ManyToManyField(default='Annual Reports', related_name='report_types', to='core.financialreportscard')),
            ],
            options={
                'verbose_name_plural': 'Financial Reports',
            },
        ),
        migrations.CreateModel(
            name='FooterLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_text', models.CharField(max_length=255)),
                ('link_url', models.CharField(max_length=200)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.footersection')),
            ],
            options={
                'verbose_name_plural': 'Footer Links',
            },
        ),
        migrations.CreateModel(
            name='HeroSectionSlider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slides', models.ManyToManyField(related_name='sliders', to='core.herosliderimage')),
            ],
            options={
                'verbose_name_plural': 'Hero Section Sliders',
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', ckeditor.fields.RichTextField()),
                ('job_description', ckeditor.fields.RichTextField()),
                ('cta_text', models.CharField(max_length=100)),
                ('cta_link', models.CharField(max_length=200)),
                ('job_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core.jobspage')),
            ],
            options={
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='NavbarSubTab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tab name under the main item', max_length=255)),
                ('url', models.CharField(blank=True, help_text='Optional URL for the sub-tab', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the sub-tab')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to display this tab')),
                ('main_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_tabs', to='core.navbarmainitem')),
            ],
            options={
                'verbose_name_plural': 'Navbar Sub Tabs',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='NavbarContentLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Link name', max_length=255)),
                ('url', models.CharField(help_text='Link URL')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to display this link')),
                ('sub_tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.navbarsubtab')),
            ],
            options={
                'verbose_name_plural': 'Navbar Content Links',
            },
        ),
        migrations.CreateModel(
            name='NavigationMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, help_text='Logo to be displayed in the navbar', null=True, upload_to='navbar-logos/')),
                ('navbar', models.ManyToManyField(blank=True, to='core.navbarmainitem')),
            ],
            options={
                'verbose_name_plural': 'Navigation Main',
            },
        ),
        migrations.CreateModel(
            name='MediaPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='MediaPage', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MediaPage', to='core.herosection')),
                ('media_tabs_promo', models.ManyToManyField(related_name='MediaPage', to='core.mediacards')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='media_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Media Pages',
            },
        ),
        migrations.CreateModel(
            name='JobsLP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='jobs_lp', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs_lp', to='core.herosection')),
                ('jobs', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs_lp', to='core.jobspage')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs_lp_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Jobs LPs',
            },
        ),
        migrations.CreateModel(
            name='Investors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='Investors', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Investors', to='core.herosection')),
                ('investor_promo', models.ManyToManyField(related_name='Investors', to='core.investorspromo')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investors_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Investors',
            },
        ),
        migrations.CreateModel(
            name='InvestorRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('article_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='InvestorRelation', to='core.articlesection')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='InvestorRelation', to='core.footersection')),
                ('grievance_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='InvestorRelation', to='core.grievancepromo')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='InvestorRelation', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investor_relation_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Investor Relations',
            },
        ),
        migrations.CreateModel(
            name='EmploymentApplicationPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='employment_page', to='core.footersection')),
                ('hero_sections', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employment_page', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employment_page_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name': 'Employment Application Page',
                'verbose_name_plural': 'Employment Application Pages',
            },
        ),
        migrations.CreateModel(
            name='CareersOpportunityPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('programs', models.ManyToManyField(blank=True, related_name='careers_ops', to='core.financialsolutionpromo')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='careers_ops', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='careers_ops', to='core.herosection')),
                ('hr_promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='careers_ops', to='core.hrmessage')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='careers_ops_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Careers Opportunity Pages',
            },
        ),
        migrations.CreateModel(
            name='BranchPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='branch', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BranchPage', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Branch Pages',
            },
        ),
        migrations.CreateModel(
            name='AwardsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('awards_promo', models.ManyToManyField(related_name='awards', to='core.faqitem')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='awards', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Awards Pages',
            },
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('article_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ArticlePage', to='core.articlesection')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='ArticlePage', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ArticlePage', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Article Pages',
            },
        ),
        migrations.CreateModel(
            name='AccountsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('accounts_promo_all', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Account', to='core.accountsection')),
                ('faq', models.ManyToManyField(blank=True, related_name='account_types', to='core.faqitem')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='Account', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Account', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acc_sub_nav', to='core.navigationmain')),
            ],
            options={
                'verbose_name_plural': 'Accounts Pages',
            },
        ),
        migrations.CreateModel(
            name='OffersPromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('header', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('cta_text', models.CharField(blank=True, max_length=100)),
                ('link', models.CharField(blank=True, max_length=250)),
                ('images', models.ManyToManyField(related_name='offers_promos', to='core.offerimage')),
            ],
            options={
                'verbose_name_plural': 'Offers Promos',
            },
        ),
        migrations.CreateModel(
            name='Homepage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('account_promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.accountpromo')),
                ('banking_promo', models.ManyToManyField(blank=True, related_name='homepages', to='core.bankingpromo')),
                ('financial_solution_promo', models.ManyToManyField(blank=True, related_name='homepages', to='core.financialsolutionpromo')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='homepages', to='core.footersection')),
                ('hero_slider_sections', models.ManyToManyField(blank=True, related_name='homepages', to='core.herosectionslider')),
                ('navbar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_nav', to='core.navigationmain')),
                ('news_updates', models.ManyToManyField(related_name='homepages', to='core.newsupdate')),
                ('offers_promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.offerspromo')),
                ('promo_banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promobanner')),
            ],
            options={
                'verbose_name_plural': 'Homepages',
            },
        ),
        migrations.CreateModel(
            name='AccountDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('account_features', models.ManyToManyField(related_name='AccountDetail', to='core.accountfeature')),
                ('eligibility_docs', models.ManyToManyField(to='core.eligibilitydoctile')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='AccountDetail', to='core.footersection')),
                ('hero_sections', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AccountDetails', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acc_details_sub_nav', to='core.navigationmain')),
                ('promo_banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promobanner')),
                ('promo_banner_full', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promobannerfull')),
            ],
            options={
                'verbose_name_plural': 'Account Details',
            },
        ),
        migrations.CreateModel(
            name='Careers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('careers_features', models.ManyToManyField(related_name='Career', to='core.accountfeature')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='Career', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Careers', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='careers_sub_nav', to='core.navigationmain')),
                ('management_promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.offerspromo')),
                ('red_box_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='careers', to='core.redboxpromo')),
            ],
            options={
                'verbose_name': 'Careers',
                'verbose_name_plural': 'Careers',
            },
        ),
        migrations.CreateModel(
            name='RedBoxPromoEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(blank=True, upload_to='red_box_icons/')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('cta_text', models.CharField(max_length=100, verbose_name='CTA Text')),
                ('cta_url', models.CharField(max_length=255, verbose_name='CTA URL')),
                ('red_box_promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='core.redboxpromo')),
            ],
            options={
                'verbose_name_plural': 'Red Box Promo Entries',
            },
        ),
        migrations.CreateModel(
            name='ReportsTabSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('report_types', models.ManyToManyField(related_name='reports', to='core.financialreports')),
            ],
            options={
                'verbose_name_plural': 'Reports Tab Sections',
            },
        ),
        migrations.CreateModel(
            name='FinancialReportsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='financial_reports', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_reports', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_reports_sub_nav', to='core.navigationmain')),
                ('reports_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_reports', to='core.reportstabsection')),
            ],
            options={
                'verbose_name_plural': 'Financial Reports Pages',
            },
        ),
        migrations.CreateModel(
            name='ElectionDirectorsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='election_directors', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='election_directors', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='election_directors_sub_nav', to='core.navigationmain')),
                ('election_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='election_directors', to='core.reportstabsection')),
            ],
            options={
                'verbose_name_plural': 'Election Directors Pages',
            },
        ),
        migrations.CreateModel(
            name='QuickLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='QuickLinks', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='QuickLinks', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quick_links_sub_nav', to='core.navigationmain')),
                ('others_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='QuickLinks_2', to='core.tablepromo')),
                ('shareholding_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='QuickLinks', to='core.tablepromo')),
            ],
            options={
                'verbose_name_plural': 'Quick Links',
            },
        ),
        migrations.CreateModel(
            name='LeadershipPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='LeadershipPage', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LeadershipPage', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leadership_sub_nav', to='core.navigationmain')),
                ('team_promo', models.ManyToManyField(related_name='LeadershipPage', to='core.team')),
            ],
            options={
                'verbose_name_plural': 'Leadership Pages',
            },
        ),
        migrations.CreateModel(
            name='GovernancePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='GovernancePage', to='core.footersection')),
                ('grievance_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='GovernancePage', to='core.grievancepromo')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='GovernancePage', to='core.herosection')),
                ('legal_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='GovernancePage', to='core.legaladvisorspromo')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='governance_sub_nav', to='core.navigationmain')),
                ('team_promo', models.ManyToManyField(related_name='GovernancePage', to='core.team')),
            ],
            options={
                'verbose_name_plural': 'Governance Pages',
            },
        ),
        migrations.CreateModel(
            name='VisionMissionEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, upload_to='vision_mission_logos/')),
                ('header', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='core.visionmissionpromo')),
            ],
            options={
                'verbose_name_plural': 'Vision Mission Entries',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('contact_info', models.ManyToManyField(related_name='ContactUs', to='core.contactinfo')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='ContactUs', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ContactUs', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_us_sub_nav', to='core.navigationmain')),
                ('vision_mission_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ContactUs', to='core.visionmissionpromo')),
            ],
            options={
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('companies_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompanyProfile', to='core.associatedcompaniespromo')),
                ('company_detail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompanyProfile', to='core.companydetails')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='CompanyProfile', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompanyProfile', to='core.herosection')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_profile_sub_nav', to='core.navigationmain')),
                ('company_table_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompanyProfile', to='core.tablepromo')),
                ('vision_mission_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompanyProfile', to='core.visionmissionpromo')),
            ],
            options={
                'verbose_name_plural': 'Company Profiles',
            },
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('aboutus_features', models.ManyToManyField(related_name='about_us', to='core.accountfeature')),
                ('footer_section', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='about_us', to='core.footersection')),
                ('hero_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='about_us', to='core.herosection')),
                ('modal_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='about_us', to='core.modalpromo')),
                ('navbar', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationmain')),
                ('subnav', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='about_us_sub_nav', to='core.navigationmain')),
                ('vision_mission_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='about_us', to='core.visionmissionpromo')),
            ],
            options={
                'verbose_name_plural': 'About Us',
            },
        ),
    ]
